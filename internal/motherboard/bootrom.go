package motherboard

type BootRom struct {
	bootrom []uint8
}

func NewBootRom(cgb bool) *BootRom {
	var bootrom []uint8
	if cgb {
		logger.Info("Using CGB bootrom")
		bootrom = BootRomCGB[:]
	} else {
		logger.Info("Using DMG bootrom")
		bootrom = BootRomDMG[:]
	}

	return &BootRom{
		bootrom: bootrom,
	}
}

func (br *BootRom) GetItem(addr uint16) uint8 {
	return br.bootrom[addr]
}

var BootRomDMG = []uint8{
	0x31, 0xfe, 0xff, 0x21, 0x0, 0x80, 0xaf, 0x22, 0x7c, 0xfe, 0xa0, 0x20, 0xf9, 0x6, 0x30, 0x21,
	0xbb, 0x0, 0x11, 0x10, 0x80, 0x2a, 0x12, 0x13, 0x12, 0x13, 0x5, 0x20, 0xf8, 0x3e, 0x1, 0x21,
	0x8, 0x99, 0x22, 0x23, 0x77, 0x6, 0x4, 0x3e, 0x2, 0x21, 0x28, 0x99, 0x22, 0x3c, 0x5, 0x20,
	0xfb, 0x3e, 0x3, 0x77, 0x87, 0x21, 0x49, 0x99, 0x22, 0x23, 0x23, 0x77, 0x3e, 0x91, 0xe0, 0x40,
	0x3e, 0xfc, 0xe0, 0x47, 0x3e, 0x80, 0xe0, 0x26, 0xe0, 0x11, 0x3e, 0xf3, 0xe0, 0x12, 0xe0, 0x25,
	0x3e, 0x77, 0xe0, 0x24, 0xe, 0x3c, 0xaf, 0x57, 0x47, 0xf0, 0x44, 0xfe, 0x90, 0x28, 0x46, 0x5f,
	0x79, 0x2f, 0xd6, 0x8f, 0xbb, 0x38, 0x5, 0xd6, 0x10, 0xbb, 0x38, 0x2b, 0xaf, 0xe0, 0x43, 0x18,
	0xe8, 0x3e, 0x13, 0xe0, 0x10, 0x3e, 0x48, 0xe0, 0x13, 0x3e, 0x81, 0xe0, 0x14, 0xc9, 0x3e, 0x19,
	0xe0, 0x10, 0x3e, 0x81, 0xe0, 0x14, 0xc9, 0x0, 0x0, 0x1, 0x2, 0x2, 0x3, 0x3, 0x3, 0x2,
	0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x79, 0x83, 0xe6, 0xf, 0x5f, 0x21, 0x87, 0x0, 0x19,
	0x7e, 0xe0, 0x43, 0x18, 0xb4, 0xf0, 0x44, 0xfe, 0x90, 0x28, 0xfa, 0x79, 0xfe, 0x1b, 0xcc, 0x71,
	0x0, 0xfe, 0x1f, 0xcc, 0x7e, 0x0, 0xd, 0x20, 0xa0, 0x18, 0x41, 0x0, 0x0, 0x0, 0x7c, 0x7e,
	0x66, 0x66, 0x66, 0x7e, 0x7c, 0x60, 0x60, 0x60, 0x60, 0x60, 0x0, 0x0, 0x66, 0x66, 0x66, 0x66,
	0x7e, 0x3c, 0x1c, 0x7e, 0x7c, 0x66, 0x66, 0x66, 0x7e, 0x7c, 0x0, 0x0, 0x3c, 0x7e, 0x66, 0x66,
	0x7e, 0x3c, 0x0, 0x18, 0xf0, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3e, 0x1, 0xe0, 0x50,
}

var BootRomCGB = []uint8{
	0x31, 0xfe, 0xff, 0x21, 0x0, 0x80, 0xaf, 0x22, 0x7c, 0xfe, 0xa0, 0x20, 0xf9, 0x6, 0x30, 0x21,
	0xbb, 0x0, 0x11, 0x10, 0x80, 0x2a, 0x12, 0x13, 0x12, 0x13, 0x5, 0x20, 0xf8, 0x3e, 0x1, 0x21,
	0x8, 0x99, 0x22, 0x23, 0x77, 0x6, 0x4, 0x3e, 0x2, 0x21, 0x28, 0x99, 0x22, 0x3c, 0x5, 0x20,
	0xfb, 0x3e, 0x3, 0x77, 0x87, 0x21, 0x49, 0x99, 0x22, 0x23, 0x23, 0x77, 0x3e, 0x91, 0xe0, 0x40,
	0x3e, 0xfc, 0xe0, 0x47, 0x3e, 0x80, 0xe0, 0x26, 0xe0, 0x11, 0x3e, 0xf3, 0xe0, 0x12, 0xe0, 0x25,
	0x3e, 0x77, 0xe0, 0x24, 0xe, 0x3c, 0xaf, 0x57, 0x47, 0xf0, 0x44, 0xfe, 0x90, 0x28, 0x46, 0x5f,
	0x79, 0x2f, 0xd6, 0x8f, 0xbb, 0x38, 0x5, 0xd6, 0x10, 0xbb, 0x38, 0x2b, 0xaf, 0xe0, 0x43, 0x18,
	0xe8, 0x3e, 0x13, 0xe0, 0x10, 0x3e, 0x48, 0xe0, 0x13, 0x3e, 0x81, 0xe0, 0x14, 0xc9, 0x3e, 0x19,
	0xe0, 0x10, 0x3e, 0x81, 0xe0, 0x14, 0xc9, 0x0, 0x0, 0x1, 0x2, 0x2, 0x3, 0x3, 0x3, 0x2,
	0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x79, 0x83, 0xe6, 0xf, 0x5f, 0x21, 0x87, 0x0, 0x19,
	0x7e, 0xe0, 0x43, 0x18, 0xb4, 0xf0, 0x44, 0xfe, 0x90, 0x28, 0xfa, 0x79, 0xfe, 0x1b, 0xcc, 0x71,
	0x0, 0xfe, 0x1f, 0xcc, 0x7e, 0x0, 0xd, 0x20, 0xa0, 0x18, 0x41, 0x0, 0x0, 0x0, 0x7c, 0x7e,
	0x66, 0x66, 0x66, 0x7e, 0x7c, 0x60, 0x60, 0x60, 0x60, 0x60, 0x0, 0x0, 0x66, 0x66, 0x66, 0x66,
	0x7e, 0x3c, 0x1c, 0x7e, 0x7c, 0x66, 0x66, 0x66, 0x7e, 0x7c, 0x0, 0x0, 0x3c, 0x7e, 0x66, 0x66,
	0x7e, 0x3c, 0x0, 0x18, 0xf0, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3e, 0x11, 0xe0, 0x50,
}
